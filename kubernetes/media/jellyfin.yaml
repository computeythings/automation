---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jellyfin
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 25Gi
  storageClassName: longhorn-persist
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: jellyfin
    service: media
  name: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: jellyfin
        service: media
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cpu
                operator: In
                values:
                - haswell
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin
      - name: movies
        persistentVolumeClaim:
          claimName: movies-claim
      - name: anime
        persistentVolumeClaim:
          claimName: anime-claim
      - name: tv
        persistentVolumeClaim:
          claimName: tv-claim
      containers:
      - image: linuxserver/jellyfin
        name: jellyfin
        env:
        - name: PUID
          value: "911"
        - name: PGID
          value: "911"
        volumeMounts:
        - name: config
          mountPath: "/config"
        - name: tv
          mountPath: "/media/tv"
          readOnly: true
        - name: anime
          mountPath: "/media/anime"
          readOnly: true
        - name: movies
          mountPath: "/media/movies"
          readOnly: true
      dnsConfig:
        options:
        - name: ndots
          value: "1"
        - name: single-request-reopen
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: jellyfin
    service: media-frontend
  name: jellyfin
spec:
  ports:
  - name: web
    protocol: TCP
    port: 8096
  selector:
    app: jellyfin
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-ingress
spec:
  rules:
  - host: jelly.k8s.bnet.lan
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin
            port:
              name: web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-public
spec:
  rules:
  - host: tv.us.gonnella.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin
            port:
              name: web
