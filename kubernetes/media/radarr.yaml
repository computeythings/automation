---
apiVersion: v1
kind: ConfigMap
metadata:
  name: radarr-config.xml
data:
  radarr-config.xml: |-
    <Config>
      <BindAddress>*</BindAddress>
      <Port>7878</Port>
      <SslPort>9898</SslPort>
      <EnableSsl>False</EnableSsl>
      <LaunchBrowser>True</LaunchBrowser>
      <ApiKey>8e9559315f5e493dae6cb4d00cced965</ApiKey>
      <AuthenticationMethod>Forms</AuthenticationMethod>
      <AuthenticationRequired>Enabled</AuthenticationRequired>
      <Branch>master</Branch>
      <LogLevel>info</LogLevel>
      <SslCertPath></SslCertPath>
      <SslCertPassword></SslCertPassword>
      <UrlBase></UrlBase>
      <InstanceName>Radarr</InstanceName>
      <UpdateMechanism>Docker</UpdateMechanism>
      <PostgresUser>radarr</PostgresUser>
      <PostgresPassword>MoviePortCumberson</PostgresPassword>
      <PostgresPort>5432</PostgresPort>
      <PostgresHost>postgres.default.svc.cluster.local</PostgresHost>
      <PostgresMainDb>radarr-data</PostgresMainDb>
      <PostgresLogDb>radarr-log</PostgresLogDb>
    </Config>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: radarr
    service: media
  name: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: radarr
        service: media
    spec:
      volumes:
      - name: config
        configMap:
          name: radarr-config.xml
          items:
            - key: radarr-config.xml
              path: config.xml
      - name: movies
        persistentVolumeClaim:
          claimName: movies-claim
      - name: downloads
        persistentVolumeClaim:
          claimName: downloads-claim
      containers:
      - image: linuxserver/radarr
        name: radarr
        resources: {}
        volumeMounts:
        - name: config
          mountPath: "/config/config.xml"
          subPath: "config.xml"
        - name: movies
          mountPath: "/media/movies"
        - name: downloads
          mountPath: "/downloads"
      dnsConfig:
        options:
        - name: ndots
          value: "1"
        - name: single-request-reopen
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: radarr
    service: media-mgmt
  name: radarr
spec:
  ports:
  - name: web
    port: 7878
    protocol: TCP
  selector:
    app: radarr
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr-ingress
spec:
  rules:
  - host: radarr.k8s.bnet.lan
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: radarr
            port:
              name: web
